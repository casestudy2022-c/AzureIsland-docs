openapi: 3.0.0
x-stoplight:
  id: wn6i4fn27mv6j
info:
  title: AzureIsland-api
  version: 1.0.0
  description: Azure Islandのサービスで使用されるAPIの設計
servers:
  - url: 'http://localhost:9000'
paths:
  '/users/{userId}':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
        description: 取得ユーザのid
    get:
      summary: Get User
      tags:
        - user
      responses:
        '200':
          $ref: '#/components/responses/User'
        '401':
          description: User Not Found
      operationId: get-users-userId
      description: 指定したユーザ情報の取得
      parameters: []
      security:
        - Authorization: []
  /me:
    get:
      summary: Get Me
      tags:
        - user
      operationId: get-me
      parameters: []
      security:
        - Authorization: []
      description: ''
      responses:
        '200':
          $ref: '#/components/responses/Me'
        '401':
          description: Unauthorized
    put:
      summary: Update Me
      operationId: put-me
      parameters: []
      tags:
        - user
      security:
        - Authorization: []
      requestBody:
        $ref: '#/components/requestBodies/Me'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
  /login:
    post:
      summary: Login User
      operationId: post-login
      responses:
        '200':
          $ref: '#/components/responses/LoginToken'
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/Login'
      tags:
        - user
  /buildings:
    get:
      summary: Get Building List
      tags:
        - building
      responses:
        '200':
          $ref: '#/components/responses/BuildingList'
        '401':
          description: Unauthorized
      operationId: get-buildings
      description: 建物一覧の取得
      parameters: []
      security:
        - Authorization: []
    parameters: []
  '/buildings/{buildingId}':
    parameters:
      - $ref: '#/components/parameters/buildingId'
    get:
      summary: Get Building
      tags:
        - building
      operationId: get-buildings-buildingId
      parameters: []
      description: 指定した建物の取得
      responses:
        '200':
          $ref: '#/components/responses/Building'
        '401':
          description: Unauthorized
      security:
        - Authorization: []
  /stages:
    get:
      summary: Get Stage
      tags:
        - stage
      responses:
        '200':
          $ref: '#/components/responses/StageList'
        '401':
          description: Unauthorized
      operationId: get-stages
      description: ステージ一覧の取得
      parameters: []
      security:
        - Authorization: []
  '/stages/{stageId}':
    parameters:
      - $ref: '#/components/parameters/stageId'
    get:
      summary: Get Stage
      tags:
        - stage
      responses:
        '200':
          $ref: '#/components/responses/Stage'
        '401':
          description: Unauthorized
      operationId: get-stage-stageId
      description: 指定したステージ情報の取得
      parameters: []
      security:
        - Authorization: []
  '/stages/{stageId}/steps':
    parameters:
      - $ref: '#/components/parameters/stageId'
    get:
      summary: Get Step List
      tags:
        - stage
      responses:
        '200':
          $ref: '#/components/responses/StepList'
        '401':
          description: Unauthorized
      operationId: get-stage-stageId-steps
      parameters: []
      security:
        - Authorization: []
      description: 指定ステージのステップ一覧の取得
  '/stages/{stageId}/steps/{stepId}':
    parameters:
      - $ref: '#/components/parameters/stageId'
      - $ref: '#/components/parameters/stepId'
    get:
      summary: Get Step
      tags:
        - stage
      responses:
        '200':
          $ref: '#/components/responses/Step'
        '401':
          description: Unauthorized
      operationId: get-stage-stageId-step-stepId
      parameters: []
      description: 指定したステップの取得
      security:
        - Authorization: []
  /map:
    get:
      summary: Get Map
      tags:
        - map
      responses:
        '200':
          $ref: '#/components/responses/Map'
        '401':
          description: Unauthorized
      operationId: get-map
      description: マップの情報を取得
      parameters: []
      security:
        - Authorization: []
  /building:
    head:
      summary: socket build
      operationId: head-build
      responses:
        '201':
          description: Created
      description: websocketです！！！
      parameters: []
      security:
        - Authorization: []
      requestBody:
        $ref: '#/components/requestBodies/socketBuildingRequest'
      tags:
        - z-socket
    parameters: []
components:
  schemas:
    Login:
      title: Login
      x-stoplight:
        id: mo6i0xqhy05ur
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Me:
      title: Me
      type: object
      description: ログインユーザ情報
      x-examples: {}
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
      required:
        - firstName
        - lastName
        - email
    MeDetail:
      title: MeDetail
      x-stoplight:
        id: 8bgk7jor6jxva
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        kinds:
          type: string
          description: '0:先生, 1:生徒'
          enum:
            - student
            - teacher
        lastClearStep:
          $ref: '#/components/schemas/LastClearStep'
      required:
        - firstName
        - lastName
        - email
    User:
      title: User
      x-stoplight:
        id: r1xjeguizl6lj
      type: object
      description: ''
      x-examples:
        example:
          id: 1
          lastname: 春
          firstname: 太郎
          email: example@example.com
          permission:
            id: 1
            name: ALL
            'no': 1
            description: 全ての権限を持ちます
      properties:
        id:
          type: integer
        lastname:
          type: string
        firstname:
          type: string
      required:
        - lastname
        - firstname
    Building:
      title: Building
      x-stoplight:
        id: raadytanuyaso
      type: object
      x-examples:
        example:
          id: 1
          name: 家
          description: Webサーバを見立てた建物
          ranks:
            - id: 1
              rank: 1
              imageSrc: /web-server_rank1.png
              isOpen: true
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        ranks:
          type: array
          items:
            $ref: '#/components/schemas/BuildingRank'
      required:
        - name
        - description
        - ranks
    BuildingDetail:
      title: BuildingDetail
      x-stoplight:
        id: darb3c6ltdlyx
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        rank:
          type: integer
        imageSrc:
          type: string
      required:
        - name
        - description
        - rank
        - imageSrc
    BuildingRank:
      title: BuildingRank
      x-stoplight:
        id: xqqqrpb9l1now
      type: object
      properties:
        id:
          type: integer
        rank:
          type: integer
        imageSrc:
          type: string
      required:
        - rank
        - imageSrc
    Stage:
      title: Stage
      x-stoplight:
        id: yjwjnjgfb4xzv
      type: object
      x-examples:
        example:
          id: 1
          title: Webサーバを使ってみよう！
          description: Webサーバを使ったステージ
          'no': 1
          steps:
            - id: 1
              title: お家を立ててみよう!
              description: webサーバを立てるステップです
              'no': 1
            - id: 2
              title: お家の装飾を変えてみよう!
              description: webサーバの設定を変更するステップです
              'no': 2
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        'no':
          type: integer
      required:
        - title
        - description
        - 'no'
    StageDetail:
      title: StageDetail
      x-stoplight:
        id: 84x67v0a481u5
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        'no':
          type: integer
        step:
          $ref: '#/components/schemas/Step'
      required:
        - title
        - description
        - 'no'
        - step
    StageAndSteps:
      title: StageAndSteps
      x-stoplight:
        id: 7o85g2bxbkfxi
      type: object
      x-examples:
        example:
          id: 1
          title: Webサーバを使ってみよう！
          description: Webサーバを使ったステージ
          'no': 1
          steps:
            - id: 1
              title: お家を立ててみよう!
              description: webサーバを立てるステップです
              'no': 1
            - id: 2
              title: お家の装飾を変えてみよう!
              description: webサーバの設定を変更するステップです
              'no': 2
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        'no':
          type: integer
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
      required:
        - title
        - description
        - 'no'
        - steps
    Step:
      title: Step
      x-stoplight:
        id: atmw055r61sns
      type: object
      x-examples:
        example1:
          id: 1
          title: お家を立ててみよう!
          description: webサーバを立てるステップです
          'no': 1
        example2:
          id: 2
          title: お家の装飾を変えてみよう!
          description: webサーバの設定を変更するステップです
          'no': 2
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        'no':
          type: integer
      required:
        - title
        - description
        - 'no'
    LastClearStep:
      title: LastClearStep
      x-stoplight:
        id: mm2fcyvarnvpn
      type: object
      x-examples: {}
      properties:
        stage:
          $ref: '#/components/schemas/StageDetail'
        clearDatetime:
          type: string
          format: date-time
          nullable: true
      required:
        - stage
        - clearDatetime
    Map:
      title: Map
      x-stoplight:
        id: 79jmktzawfr6b
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
        name:
          type: string
          description: 建てた建物自体の名前(表札のイメージ)
        x:
          type: integer
          description: X座標
        'y':
          type: integer
          description: Y座標
        user:
          $ref: '#/components/schemas/User'
        building:
          $ref: '#/components/schemas/BuildingDetail'
      required:
        - name
        - x
        - 'y'
        - user
        - building
    socketBuildingRequest:
      title: socketBuildingRequest
      x-stoplight:
        id: z8jz7qywacze5
      type: object
      x-examples: {}
      properties:
        name:
          type: string
        x:
          type: integer
        'y':
          type: integer
        buildingId:
          type: integer
        rank:
          type: integer
    Permission:
      title: Permission
      x-stoplight:
        id: h4x0vokew4f8h
      type: object
      description: ''
      x-examples:
        example:
          id: 1
          name: ALL
          'no': 1
          description: 全ての権限を持ちます
      properties:
        id:
          type: integer
        name:
          type: string
        'no':
          type: integer
        description:
          type: string
      required:
        - name
        - 'no'
        - description
    Progress:
      title: Progress
      x-stoplight:
        id: f7m9cz0qei5bx
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
    Token:
      title: Token
      x-stoplight:
        id: chij2juvvbext
      type: object
      properties:
        token:
          type: string
  requestBodies:
    socketBuildingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/socketBuildingRequest'
      description: ''
    Me:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Me'
          examples:
            example:
              value:
                id: 2
                firstName: 大阪
                lastName: 太郎
                email: useruser@example.com
    Login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
  responses:
    Me:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeDetail'
          examples:
            example:
              value:
                id: 1
                firstName: 春
                lastName: 太郎
                email: user@example.com
                kinds: student
                lastClearStep:
                  stage:
                    id: 1
                    title: Webサーバを使ってみよう！
                    description: Webサーバを使ったステージ
                    'no': 1
                    step:
                      id: 2
                      title: お家の装飾を変えてみよう!
                      description: webサーバの設定を変更するステップです
                      'no': 2
                  clearDatetime: '2019-08-24T14:15:22Z'
    Map:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Map'
          examples:
            example:
              value:
                id: 23
                name: 春太郎の家
                x: 3
                'y': 12
                user:
                  id: 1
                  lastname: 春
                  firstname: 太郎
                building:
                  id: 1
                  name: 家
                  description: Webサーバを見立てた建物
                  rank: 1
                  imageSrc: /web-server_rank1.png
    Building:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Building'
          examples:
            example:
              value:
                id: 1
                name: 家
                description: Webサーバを見立てた建物
                ranks:
                  - id: 1
                    rank: 1
                    imageSrc: /web-server_rank1.png
                    isOpen: true
                  - id: 2
                    rank: 2
                    imageSrc: /web-server_rank2.png
                    isOpen: false
    User:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            example:
              value:
                id: 99
                lastname: 猛度
                firstname: 花子
    BuildingList:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              buildings:
                type: array
                items:
                  $ref: '#/components/schemas/Building'
          examples:
            example:
              value:
                buildings:
                  - id: 1
                    name: 家
                    description: Webサーバを見立てた建物
                    ranks:
                      - id: 1
                        rank: 1
                        imageSrc: /web-server_rank1.png
                        isOpen: true
                      - id: 2
                        rank: 2
                        imageSrc: /web-server_rank2.png
                        isOpen: false
                  - id: 2
                    name: 郵便局
                    description: ファイルサーバを見立てた建物
                    ranks:
                      - id: 3
                        rank: 1
                        imageSrc: /file-server_rank1.png
                        isOpen: false
                      - id: 4
                        rank: 2
                        imageSrc: /file-server_rank2.png
                        isOpen: false
    Stage:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StageAndSteps'
          examples:
            example:
              value:
                id: 1
                title: Webサーバを使ってみよう！
                description: Webサーバを使ったステージ
                'no': 1
                steps:
                  - id: 1
                    title: お家を立ててみよう!
                    description: webサーバを立てるステップです
                    'no': 1
                  - id: 2
                    title: お家の装飾を変えてみよう!
                    description: webサーバの設定を変更するステップです
                    'no': 2
    StageList:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              stages:
                type: array
                items:
                  $ref: '#/components/schemas/StageAndSteps'
          examples:
            example:
              value:
                stages:
                  - id: 1
                    title: Webサーバを使ってみよう！
                    description: Webサーバを使ったステージ
                    'no': 1
                    steps:
                      - id: 1
                        title: お家を立ててみよう!
                        description: webサーバを立てるステップです
                        'no': 1
                      - id: 2
                        title: お家の装飾を変えてみよう!
                        description: webサーバの設定を変更するステップです
                        'no': 2
                  - id: 2
                    title: ファイルサーバを使ってみよう！
                    description: ファイルサーバを使ったステージ
                    'no': 2
                    steps:
                      - id: 3
                        title: 郵便局を立ててみよう!
                        description: ファイルサーバを立てるステップです
                        'no': 1
                      - id: 4
                        title: 従業員さんを雇おう！
                        description: ファイルサーバの設定を変更するステップです
                        'no': 2
    Step:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Step'
          examples:
            example:
              value:
                id: 1
                title: お家を立ててみよう!
                description: webサーバを立てるステップです
                'no': 1
    StepList:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              steps:
                type: array
                items:
                  $ref: '#/components/schemas/Step'
          examples:
            example:
              value:
                steps:
                  - id: 1
                    title: お家を立ててみよう!
                    description: webサーバを立てるステップです
                    'no': 1
                  - id: 2
                    title: お家の装飾を変えてみよう!
                    description: webサーバの設定を変更するステップです
                    'no': 2
    LoginToken:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token'
  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      name: Authorization
  examples: {}
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: integer
      description: 取得ユーザのid
    buildingId:
      name: buildingId
      in: path
      required: true
      schema:
        type: integer
      description: 取得建物のid
    stageId:
      name: stageId
      in: path
      required: true
      schema:
        type: integer
      description: 取得ステージのid
    stepId:
      name: stepId
      in: path
      required: true
      schema:
        type: integer
      description: 取得ステップのid
tags:
  - name: building
  - name: map
  - name: stage
  - name: user
  - name: z-socket
